@model lojabanco.Models.ProdutoModel
<h1>Editar Produto</h1>

<form method="POST" id="editarForm">
<div class="mb-3">
<input type="text" asp-for="Id">
  <label asp-for="Nome" class="form-label">Nome</label>
  <input type="text" class="form-control" id="nome" asp-for="Nome">
  <span asp-validation-for="Nome" class="text-danger"></span>

  <label asp-for="Preco" class="form-label">Preço</label>
  <input type="text" class="form-control" id="preco" asp-for="Preco">
  <span asp-validation-for="Preco" class="text-danger"></span>

  <label asp-for="Descricao" class="form-label">Descrição</label>
  <textarea type="text" class="form-control" id="descricao" asp-for="Descricao"></textarea>
  <span asp-validation-for="Descricao" class="text-danger"></span>


  <button type="submit" class="btn btn-primary">Salvar</button>
  <button asp-action="Index" class="btn btn-secondary">Cancelar</button>
</div>
</form>

<div class="modal fade" id="confirmarEditarModal" tabindex="-1" aria-labelledby="confirmarEditarLabel">

  <div class="modal-dialog">
      <div class="modal-content">
          <div class="modal-header">
              <h5 class="modal-title" id="confirmarEditarLabel">
                  confirmar edição
              </h5>
              <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
              <p>Tem certeza que deseja editar o produto <span>@Model.Nome</span>?</p>        
          </div>
          <div class="modal-footer">
              <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Não</button>
              <button type="button" class="btn btn-primary" id="confirmarEditarBtn">Sim, editar</button>
          </div>
      </div>
  </div>
</div>






@section Scripts{


  

  @{
    await Html.RenderPartialAsync("_ValidationScriptsPartial.cshtml");
  }



  <script>
  @* O evento 'DOMContentLoaded' garante que o código JavaScript só será executado após todo o HTML da página ter sido carregado e analisado. Isso evita erros como algum ID ser renderizado depois do javascript, o que  faria o elemento não ser encontrado e retornaria um erro. *@
  document.addEventListener("DOMContentLoaded", function(){
    const editarForm = document.getElementById('editarForm');
    const confirmarEditarModal = new bootstrap.Modal(document.getElementById('confirmarEditarModal'));

    const confirmarEditarBtn = document.getElementById('confirmarEditarBtn');


    editarForm.addEventListener('submit', function(event) {
      event.preventDefault(); // Impede o envio padrão do formulário
      confirmarEditarModal.show(); // exibir o modal de confirmação
    });

    confirmarEditarBtn.addEventListener('click', function() {
        confirmarEditarModal.hide(); // Esconde o modal
        editarForm.submit(); // Enviar o formulário de verdade
    });
  })
  </script>


  <script>
      $.validator.method.number = function(value, element) {
           return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s.,]\d{3})+)(?:[.,]\d+)?$/.test(value.replace(/,/g, '.'));
      }

       $.validator.methods.range = function (value, element, param) {
            var val = value.replace(",", ".");
            return this.optional(element) || (val >= param[0] && val <= param[1]);
        };
 

      @* se fossemos acessar um ID *@
     @* testeId = $('#nomedoID');
     testeclass = $('.nomdeDaClass') *@
  </script>
}